ENV_STATE = "DEV"

# 项目基本配置
app_name = "beehive3"
version = "3.1.6"
project_name = "Beehive3金牛创智API服务器"
description = "Beehive是金牛创智公司的产品智能投资框架的后端API Server。主要包含以下内容：1. 发布网站前后台 2. 发布StrawmanData的后管以及接口 3. 整合stralib的数据接口"
debug = False
url_prefix = "/api"  # 路由前缀
access_token_expire_minutes = 10080  # token过期时间
calculation_completion_time_point = 18  #
allowed_hosts = '["*"]'
secret_key = "hello world"

# 后台服务器host port
beehive3_host = "localhost"
beehive3_port = "8000"

# 升级vip用户邀请码
vip_code = ""

# 交易系统
trade_url = ""  # 交易系统url
market_index_list = '["000001_1", "000300_1", "000905_1", "399001_0", "399006_0"]' # 市场指数列表
open_market_time = 9:00  # 开市时间
close_market_time = 15:00  # 闭市时间
allow_pending_order_time = 9:15  # 允许挂单时间
commission = 0.0003
tax = 0.001
# 权限配置
num_limit = '{"免费用户": {"portfolio": 10},"VIP用户": {"portfolio": 10, "equipment": 5, "robot": 5},"厂商用户": {"portfolio": 0, "equipment": 0, "robot": 0}}'

# 系统日志设置
LOG_LEVEL = "INFO"
TASK_LOG_LEVEL = "INFO"
WEBSOCKETS_LOG_LEVEL = "INFO"
UVICORN_ACCESS_LOG_LEVEL = "INFO"
ROOT_LOG_LEVEL = "INFO"

LOG_ENABLED = True  # 是否开启日志
LOG_TO_CONSOLE = True  # 是否输出到控制台
LOG_TO_FILE = False  # 是否输出到文件
LOG_PATH = "./runtime.log"  # 日志文件路径
LOG_FORMAT = "[%(asctime)s][%(name)s:%(filename)s:%(lineno)d][%(levelname)-8s] %(message)s"  # 每条日志输出格式


# 数据库配置
MONGO_HOST = localhost
MONGO_PORT = 27017
MONGO_USER = admin
MONGO_PASS = admin
MONGO_AUTHDB = admin
MONGODB_URL = "mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_AUTHDB}"
MAX_CONNECTIONS = 50
MIN_CONNECTIONS = 10

DB_NAME = "db_name"
TEST_DB_NAME = "db_name_test"


# 数据库集合
SITE_CONFIG = "site_config"
OBJECT_ACTION = "object_action"
USER_COLLECTION = "user"
ROLE = "role"
PERMISSION = "permission"
USER_MESSAGE = "user_message"
EQUIPMENT = "equipment"
ROBOT = "robot"
PORTFOLIO = "portfolio"
TAG = "tag"
PORTFOLIO_ACCOUNT = "portfolio_account"
ACTIVITY = "activity"
ACTIVITY_YIELD_RANK = "activity_yield_rank"
CLIENT = "client"
ERROR_LOG = "error_log"
STOCK_LOG = "stock_log"
MESSAGE_CONFIG = "message_config"
TREND_CHART = "trend_chart"
ORDER = "order"
FAVORITE_STOCK = "favorite_stock"
TRADE_STATS_CONF = "trade_stats_conf"
STOCK_STATS_CONF = "stock_stats_conf"
PORTFOLIO_TARGET_CONF = "portfolio_target_conf"
MSG_CONFIG = "msg_config"
STOCK_POOL = "stock_pool"
STRATEGY_DAILY_LOG = "strategy_daily_log"
STRATEGY_PUBLISH_LOG = "strategy_publish_log"
ZVT_DATA_LOG = "zvt_data_log"
ZVT_DATA_LOG_TYPE = "zvt_data_log_type"
STOCK = "stock"
FUND_ACCOUNT_FLOW = "fund_account_flow"
FUND_ACCOUNT = "fund_account"
FUND_ACCOUNT_POSITION = "fund_account_position"
POSITION_TIME_SERIES_DATA = "position_time_series_data"
FUND_TIME_SERIES_DATA = "fund_time_series_data"
PORTFOLIO_ASSESSMENT_TIME_SERIES_DATA = "portfolio_assessment_time_series_data"
PORTFOLIO_ANALYSIS = "portfolio_analysis"

# 回测实盘数据
BACKTEST_SIGNAL_AIP = "回测信号.大类资产配置"
BACKTEST_SIGNAL_CATEGORIES_OF_ASSETS = "回测信号.基金定投"
BACKTEST_SIGNAL_SCREEN = "回测信号.选股装备"
BACKTEST_SIGNAL_TIMING = "回测信号.择时装备"
BACKTEST_SIGNAL_ROBOT = "回测信号.机器人"

BACKTEST_INDICATOR_AIP = "回测指标.大类资产配置"
BACKTEST_INDICATOR_CATEGORIES_OF_ASSETS = "回测指标.基金定投"
BACKTEST_INDICATOR_SCREEN = "回测指标.选股装备"
BACKTEST_INDICATOR_TIMING = "回测指标.择时装备"
BACKTEST_INDICATOR_ROBOT = "回测指标.机器人"

BACKTEST_ASSESSMENT_AIP = "回测评级.大类资产配置"
BACKTEST_ASSESSMENT_CATEGORIES_OF_ASSETS = "回测评级.基金定投"
BACKTEST_ASSESSMENT_SCREEN = "回测评级.选股装备"
BACKTEST_ASSESSMENT_TIMING = "回测评级.择时装备"
BACKTEST_ASSESSMENT_ROBOT = "回测评级.机器人"

REAL_SIGNAL_AIP = "实盘信号.大类资产配置"
REAL_SIGNAL_CATEGORIES_OF_ASSETS = "实盘信号.基金定投"
REAL_SIGNAL_SCREEN = "实盘信号.选股装备"
REAL_SIGNAL_TIMING = "实盘信号.择时装备"
REAL_SIGNAL_ROBOT = "实盘信号.机器人"

REAL_INDICATOR_AIP = "实盘指标.大类资产配置"
REAL_INDICATOR_CATEGORIES_OF_ASSETS = "实盘指标.基金定投"
REAL_INDICATOR_SCREEN = "实盘指标.选股装备"
REAL_INDICATOR_TIMING = "实盘指标.择时装备"
REAL_INDICATOR_ROBOT = "实盘指标.机器人"

# redis
redis_host = "localhost"
redis_port = 6379
redis_password = ""

# hq2redis 配置
hq2redis_host =
hq2redis_port =
hq2redis_password =
hq2redis_db =
cache_db = 11  # 缓存库
entrust_db = 13  # 存储委托订单
portfolio_yield_db = 14  # 组合收益率排行信息
scheduler_db = 15  # 定时任务临时变量
preload_db = 16  # 预加载数据
redis_url = "redis://${redis_host}:${redis_port}/${cache_db}?encoding=utf-8"
redis_connection_timeout = 2

redis_pool_minsize = 1
redis_pool_maxsize = 10
default_time_out = 600

# airflow
airflow_base_url = ""
airflow_api_url = "${airflow_base_url}/api"
airflow_dag_url = "${airflow_base_url}/dags"
airflow_test_url = "${airflow_base_url}/test"
airflow_user_email = []

# 登录认证
#     web
web_base_url = ""
web_jwt_token_prefix = "Bearer"
web_access_token_jwt_subject = "access"
web_audience = "${app_name}"  # 应用名称，用于jwt解密
web_public_key = "${secret_key}"
web_algorithm = ["HS256"]
api_key = "beehive3 master"  # 后管api_key，用于校验后台登录

discuzq_base_url = "https://fake_discuzq.com"
discuzq_admin = "admin"
discuzq_password =  "admin"
discuzq_switch = True
discuzq_category = '{"装备": 3, "机器人": 4, "组合": 5}'

# data service plasma store name
DATA_SERVICE_NAME = ""

# 行情源配置： "Jiantou": 建投行情, "Redis": Redis行情(聚宽)
HQ_SOURCE = "Redis"
JIANTOU_URL = "https://ratest.csc108.com/market/quote?symbol={}&marketCd={}"
# 数据库配置
HQDB_NAME = ""
HQDB_HOST = ""
HQDB_PORT = 3306
HQDB_USERNAME = ""
HQDB_PASSWORD = ""

# HQ URL
HQ_URL = ""

# 聚宽
jqdata_user = ""
jqdata_password = ""
jqdata_url = "https://dataapi.joinquant.com/apis"
refresh_interval_seconds = 3

# 微信
wechat_app_id = ""
wechat_app_secret = "app_secret"

# sms
sms_secret_id = ""
sms_secret_key = ""
sms_endpoint = ""
# 短信应用ID: 短信SdkAppId在 [短信控制台] 添加应用后生成的实际SdkAppId，示例如1400006666
sms_sdk_app_id = ""
sms_sign = ""
# 模板 ID: 必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台] 查看
sms_template_id = ""
sms_expire = 1  # 短信过期时长（min）
sms_switch = True # 短信开关
sms_fixed_code = "" # 短信验证码：关闭短信功能时使用

# email
email_address = ""
email_password = ""
smtp_server = ""
smtp_server_port = 0

# 厂商配置
MANUFACTURER_SWITCH = False  # 厂商开关: 如果为true则为厂商项目，为false则为master项目
BEEHIVE_URL = "https://znjydev.jinchongzi.com/api"  # 金牛测试环境的管理平台api地址
CLIENT_USER = ""  # 访问beehive3的厂商用户名
APP_SECRET = "" # 访问beehive3的厂商密钥，注意金牛和建投的密钥要保持一致
# 是策略运行所需要的ATR指标
CLIENT_INDICATOR = [ "ATR-10-D", "ATR-20-D"]
# 定时任务
scheduler_max_thread_num = 5  # 定时任务异步任务最大线程数
