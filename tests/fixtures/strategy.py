from collections import ChainMap
from datetime import datetime

from app.enums.strategy import 策略分类

选股装备 = {
    "标识符": "02000000test00",
    "状态": "已上线",
    "名称": "test_screen",
    "简介": '<p><strong><span style="font-size:16px"><span style="color:#000000">装备简介</span></span></strong></p><p style="text-indent:2em;"><span style="font-size:16px"><span style="color:#000000">对上交所、深交所的主板市场的股票根据盈利、成长、偿债、营运、现金流等多维度进行打分，选取出整体表现在市场排前的股票；再从中筛选出其中盈利能力突出的股票，考虑中期超跌获得最终所选股票。 </span></span></p><p><strong><span style="font-size:16px"><span style="color:#000000">装备特点</span></span></strong></p><p style="text-indent:2em;"><span style="font-size:16px"><span style="color:#000000">从公司各项能力出发,聚焦高盈利的优质股票，在超跌时布局,长期有超额收益。</span></span></p><p><strong><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px">适合人群</span></span></span></strong></p><p style="text-indent:2em;"><span style="color:#000000"><span style="background-color:#ffffff"><span style="font-size:16px">不需要关注太多个股，盯盘压力不高；调仓周期快，操作频繁，适合稳健型投资者。</span></span></span></p><p><span style="color:#000000"><span style="font-size:16px"><span style="background-color:#ffffff"><strong>各种市场环境下的使用方法</strong></span></span></span></p><p style="text-indent:2em;"><span style="font-size:16px"><span style="color:#000000">在牛市和震荡市时综合表现较好；在熊市表现一般，在市场情绪尚可时可使用。</span></span></p>',
    "主页地址": None,
    "分类": "选股",
    "标签": ["量化投资"],
    "英文名": None,
    "创建时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "下线时间": None,
    "信号传入方式": "源代码传入",
    "可见模式": "完全公开",
    "评级": "C",
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "运行天数": 237,
    "累计服务人数": 5,
    "累计产生信号数": 780,
    "订阅人数": 6,
    "源代码": "5e941a2cd2a4da14d8ba44db",
    "指数列表": None,
    "装备列表": None,
    "策略话术": "该股盈利能力突出且中期超跌，有望反弹。",
    "文章标识符": 1635,
}
已上线选股装备 = dict(
    ChainMap(
        {
            "标识符": "02000000test11",
            "状态": "已上线",
        },
        选股装备,
    )
)
已下线选股装备 = dict(
    ChainMap(
        {
            "标识符": "02000000test12",
            "状态": "已下线",
        },
        选股装备,
    )
)
# ========================================================
择时装备 = {
    "标识符": "03000000test00",
    "状态": "已上线",
    "名称": "test_timing",
    "简介": '<p><span style="font-size:24px"><strong>装备简介</strong></span></p><p style="text-indent:2em;">利用股债比进行择时。当比数大于2时，往往证券市场比较低迷，此时是比较好的投资证券市场的时机；反之当比数接近或低于0.5时，证券市场存在较大的泡沫，此时应撤离证券市场。目前数值为1.5，如果股市接下来继续下跌或盈利上升或10期国债收益开始下跌或三者同时进行，那么不久即将到达2的位置，此时需要留意证券市场的投资机会；当然也应留意反向运动。</p>',
    "主页地址": None,
    "分类": "择时",
    "标签": ["量化投资"],
    "英文名": None,
    "创建时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "下线时间": None,
    "信号传入方式": "源代码传入",
    "可见模式": "完全公开",
    "评级": "C",
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "运行天数": 237,
    "累计服务人数": 7,
    "累计产生信号数": 157,
    "订阅人数": 2,
    "源代码": "5e813ec30e184fa9a666bc28",
    "指数列表": ["000300", "000001", "399001", "399006", "000905"],
    "装备列表": None,
    "择时类型": "趋势类",
    "文章标识符": 1647,
}
已上线择时装备 = dict(
    ChainMap(
        {
            "标识符": "03000000test11",
            "状态": "已上线",
        },
        择时装备,
    )
)
已下线择时装备 = dict(
    ChainMap(
        {
            "标识符": "03000000test12",
            "状态": "已下线",
        },
        择时装备,
    )
)
# ========================================================
风控装备 = {
    "标识符": "04000000test00",
    "状态": "已上线",
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "主页地址": "http://bbs.jinniuai.com",
    "信号传入方式": "源代码传入",
    "分类": "风控",
    "创建时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "可见模式": "完全公开",
    "名称": "test_risk",
    "标签": ["移动平均线", "技术指标"],
    "源代码": "5e1595d2f140ce8d903cbd3d",
    "策略话术": "该股短期趋势破位，触发风控标准，建议择机卖出。",
    "简介": "判断股价与通道之间的关系,当收盘价下穿一条通道下轨时，说明在该周期的市场趋势为下跌,短期走势破位。",
    "累计产生信号数": 13576,
    "累计服务人数": 68,
    "英文名": "DQZS_riskman",
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "评级": "A",
    "运行天数": 237,
    "文章标识符": 1735,
}
已上线风控装备 = dict(
    ChainMap(
        {
            "标识符": "04000000test11",
            "状态": "已上线",
        },
        风控装备,
    )
)
已下线风控装备 = dict(
    ChainMap(
        {
            "标识符": "04000000test12",
            "状态": "已下线",
        },
        风控装备,
    )
)
# ========================================================
交易装备 = {
    "标识符": "01000000test00",
    "状态": "已上线",
    "名称": "test_trade",
    "简介": "完全买入的交易策略，用来搭配组合，可以在避免交易策略影响组合的情况下搭配该装备。",
    "主页地址": None,
    "分类": "交易",
    "标签": ["被动投资"],
    "英文名": None,
    "创建时间": datetime.fromisoformat("2020-01-01T00:52:25"),
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "下线时间": None,
    "信号传入方式": "源代码传入",
    "可见模式": "完全公开",
    "评级": "A",
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "运行天数": 237,
    "累计服务人数": 14,
    "累计产生信号数": 582359,
    "订阅人数": 0,
    "源代码": "5e8142663878f87389d8d85d",
    "指数列表": None,
    "装备列表": None,
    "文章标识符": 1632,
    "策略话术": {"('卖1',)": "收盘价跌破多空均线BBI，短期走势可能转弱，看空", "('买1',)": "收盘价上穿多空均线BBI，短期走势可能转强，看多", "('0',)": "保持不变"},
}
已上线交易装备 = dict(
    ChainMap(
        {
            "标识符": "01000000test11",
            "状态": "已上线",
        },
        交易装备,
    )
)
已下线交易装备 = dict(
    ChainMap(
        {
            "标识符": "01000000test12",
            "状态": "已下线",
        },
        交易装备,
    )
)
# ========================================================
大类资产配置装备 = {
    "标识符": "06000000test00",
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "下线原因": None,
    "下线时间": None,
    "主页地址": None,
    "信号传入方式": "源代码传入",
    "分类": "大类资产配置",
    "创建时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "可见模式": "完全公开",
    "名称": "test_三因子风险平衡",
    "择时类型": None,
    "指数列表": None,
    "标签": ["量化投资"],
    "源代码": "5ee0bf2f58b1f563626d64b7",
    "状态": "已上线",
    "策略话术": None,
    "简介": '<p><strong><span style="color:#000000"><span style="font-size:16px">装备简介 </span></span></strong></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">采用初始权重+ES 尾部风险控制两步走的策略。设置初始权重时，采用动量+波动率+相关性三因子模型，分别排序后按 2:1:1 的比例加权得到每类资产的最终打分。再对最终得分排序前，首先剔除当期动量值小于 0 的资产，然后对筛选后的资产进行由小到大的排序，得到最终的排序值 Rank，对于某配置期，被剔除的资产权重为 0.即最高得分给予最小权重。设置初始权重后，计算预期期望亏损，期望亏损不超过给定目标则该资产全配，否则该资产按（目标 ES/预期 ES）配置，多余仓位分配给不超目标的资产。</span></span></p><p><strong><span style="color:#000000"><span style="font-size:16px">装备特点 </span></span></strong></p><p style="text-indent:2em;" class="MsoBodyText"><span style="color:#000000"><span style="font-size:16px">我们选择跟成立时间较早，并且规模较大的基金类型作为标的，并这些投资标的中选取更精准、更纯粹和更具有代表性的基金产品。其中，选择指数型基金可避免主动投资的非系统性风险和不确定性，并省去了分析主动型基金风格的繁琐过程。配置池中包含股债、黄金、港股美股海外商品等QDII产品，依此我们可以做到大类资产跨市场全球配置，分散风险。</span></span></p><p><strong><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px">适合人群</span></span></span></strong></p><p style="text-indent:2em;"><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px">需要关注的ETF数量较少，调仓周期长，盯盘压力较小，适合长线投资者。</span></span></span></p><p><span style="background-color:#ffffff"><strong><span style="color:#000000"><span style="font-size:16px">各种市场环境下的使用方法</span></span></strong></span></p><p style="text-indent:2em;"><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px">该装备适合在各种市场环境中使用。</span></span></span></p>',
    "累计产生信号数": 31,
    "累计服务人数": 0,
    "英文名": None,
    "装备列表": None,
    "计算时间": datetime.fromisoformat("2020-09-23T00:00:00"),
    "订阅人数": 1,
    "评级": "C",
    "运行天数": 266,
    "文章标识符": 1878,
}
已上线大类资产配置装备 = dict(
    ChainMap(
        {
            "标识符": "06000000test11",
            "状态": "已上线",
        },
        大类资产配置装备,
    )
)
已下线大类资产配置装备 = dict(
    ChainMap(
        {
            "标识符": "06000000test12",
            "状态": "已下线",
        },
        大类资产配置装备,
    )
)
# ========================================================
基金定投装备 = {
    "标识符": "07000000test00",
    "上线时间": datetime.fromisoformat("2020-01-01T00:00:00"),
    "下线原因": None,
    "下线时间": None,
    "主页地址": None,
    "信号传入方式": "源代码传入",
    "分类": "基金定投",
    "创建时间": datetime.fromisoformat("2020-01-01T02:39:48"),
    "可见模式": "完全公开",
    "名称": "中证500ETF估值",
    "择时类型": None,
    "指数列表": None,
    "标签": ["量化投资"],
    "源代码": "5ef801c1e6a8996d4cb5630f",
    "状态": "已上线",
    "策略话术": None,
    "简介": '<p><strong><span style="color:#000000">装备简介</span></strong></p><p style="text-indent:2em;"><span style="color:#000000">根据中证500指数的PE估值进行定投，将资金分为52份，每周进行定投，采取高抛低吸的原则，估值达到历史75%分位以上时，分批减仓，估值低于75%高于25%分位时，按1份资金加减仓，估值低于25%分位时，提高加仓份额。</span></p>',
    "累计产生信号数": 35,
    "累计服务人数": 0,
    "英文名": None,
    "装备列表": None,
    "计算时间": datetime.fromisoformat("2020-09-23T00:00:00"),
    "订阅人数": 2,
    "评级": "B",
    "运行天数": 266,
    "文章标识符": 1884,
}
已上线基金定投装备 = dict(
    ChainMap(
        {
            "标识符": "07000000test11",
            "状态": "已上线",
        },
        基金定投装备,
    )
)
已下线基金定投装备 = dict(
    ChainMap(
        {
            "标识符": "07000000test12",
            "状态": "已下线",
        },
        基金定投装备,
    )
)
# ========================================================
风控包 = {
    "标识符": "11000000test00",
    "名称": "test_package",
    "头像": "",
    "主页地址": "http://bbs.jinniuai.com",
    "分类": "风控包",
    "状态": "已上线",
    "标签": ["技术风险", "基本面风险"],
    "上线时间": datetime.fromisoformat("2019-01-01T00:00:00"),
    "购买数": 0,
    "点赞数": 0,
    "简介": "本风控包包含以下功能：1、股票出现走势破位；2、股票出现空头行情；3、股票出现潜在ST的情况； 4、审计意见类型有风险； 5、已经被ST的股票; 6、净有息负债率风险。",
    "详细介绍": "暂无",
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "服务了多少组合": "0",
    "运行天数": 602,
    "累计入选股票数量": "0",
    "累计服务人数": 68,
    "装备列表": ["04181114dqzs01", "04181114kthq01"],
    "累计产生信号数": 246790,
    "创建时间": datetime.fromisoformat("2019-12-25T08:15:07"),
    "可见模式": "完全公开",
    "订阅人数": 12,
    "评级": "A",
    "文章标识符": 1888,
}
已上线风控包 = dict(
    ChainMap(
        {
            "标识符": "11000000test11",
            "状态": "已上线",
        },
        风控包,
    )
)
已下线风控包 = dict(
    ChainMap(
        {
            "标识符": "11000000test12",
            "状态": "已下线",
        },
        风控包,
    )
)
# ========================================================
机器人 = {
    "标识符": "10000000test00",
    "名称": "test_robot",
    "头像": "5dfc3cf1cae7032669c4d7f6",
    "简介": '<p><span style="color:#000000"><span style="font-size:16px"><strong>装备简介</strong></span></span></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">综合考虑股票的基本面情况，在盈利能力、成长能力、偿债能力等多个方面进行整体打分，在上交所、深交所的主板市场中选出整体表现靠前，盈利能力突出的个股构成股票池。之后选择调整较为充分的个股进行买入，在持仓过程中利用股债平衡估值择时对整体仓位进行控制。 </span></span></p><p><span style="color:#000000"><span style="font-size:16px"><strong>装备特点</strong></span></span></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">选取的个股有着优异的盈利能力和良好的基本面情况，在当前注重公司质地的市场环境中，更容易引资金的关注。总体来看组合的收益率和稳定性较好。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px"><strong>适合人群</strong></span></span></span></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">适合稳健型，喜欢价值投资的客户。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#000000"><span style="font-size:16px"><strong>各种市场环境下的使用方法</strong></span></span></span></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">选股环节导致的买卖情况：选择股价与中期均线偏离度较大的个股买入，买入个股持有10天后会卖出。 </span></span></p><p style="text-indent:2em;"><span style="color:#000000"><span style="font-size:16px">择时环节导致的买卖情况：对市场进行股债平衡估值，当市场低估时逐渐增加组合的仓位，增加的仓位平均分配到持仓个股上。当市场高估时逐渐降低整体仓位，降低的仓位从持仓个股中平均减掉。</span></span></p>',
    "主页地址": None,
    "状态": "已上线",
    "创建时间": datetime.fromisoformat("2019-12-31T00:00:00"),
    "上线时间": datetime.fromisoformat("2019-12-31T00:00:00"),
    "下线时间": None,
    "回测开始时间": None,
    "回测结束时间": None,
    "标签": ["test_tag"],
    "可见模式": "完全公开",
    "评级": "C",
    "风控包列表": [],
    "择时装备列表": ["03000000test00"],
    "风控装备列表": ["04000000test00"],
    "选股装备列表": ["02000000test00"],
    "交易装备列表": ["01000000test00"],
    "减仓模式": ["同比例减仓"],
    "卖出筛选器": ["超过最大持仓周期", "超过止损点", "超过止盈点", "风控信号"],
    "买入筛选器": ["买选股信号的股"],
    "保证持仓数量筛选器": ["ATR技术指标筛选"],
    "分析了多少支股票": 35,
    "管理了多少组合": 4,
    "累计管理资金": 2984772.21,
    "累计创造收益": -15227.79,
    "运行天数": 238,
    "累计产生信号数": 189,
    "累计服务人数": 105,
    "计算时间": datetime.fromisoformat("2020-08-25T00:00:00"),
    "订阅人数": 3,
    "累计收益率": 0.2215,
    "投资原则": [
        {"原则名称": "绩优股", "原则内容": "对全市场的股票根据盈利、成长、偿债、营运、现金流等多维度进行打分，选取出整体表现在市场排前20%的股票。"},
        {"原则名称": "有竞争优势", "原则内容": "再从中筛选出其中盈利能力（扣非ROE和营业利润率）突出的10%股票。"},
        {"原则名称": "超跌股", "原则内容": "股票当前股价偏离60日均线排序靠前。"},
        {"原则名称": "分散持股", "原则内容": "根据ATR技术指标筛选，使总持仓股 <= 5只。"},
        {"原则名称": "等仓位分配", "原则内容": "等仓位分配。"},
        {"原则名称": "固定周期调仓", "原则内容": "持有10天卖出。"},
    ],
    "原则配置": [
        {"唯一名称": "max_hold_day", "中文名称": "最大调仓周期", "配置规则": "默认值或用户自定义", "配置值": "10"},
        {"唯一名称": "max_hold_num", "中文名称": "最大持仓数量", "配置规则": "默认值或用户自定义", "配置值": "5"},
        {"唯一名称": "stopup", "中文名称": "止盈点", "配置规则": "默认值或用户自定义", "配置值": "1.0"},
        {"唯一名称": "stopdown", "中文名称": "止损点", "配置规则": "默认值或用户自定义", "配置值": "1.0"},
        {"唯一名称": "tax_rate", "中文名称": "交易费率", "配置规则": "默认值或用户自定义", "配置值": "0.0016"},
    ],
    "文章标识符": None,
}
已上线机器人 = dict(
    ChainMap(
        {
            "标识符": "10000000test11",
            "状态": "已上线",
        },
        机器人,
    )
)
已下线机器人 = dict(
    ChainMap(
        {
            "标识符": "10000000test12",
            "状态": "已下线",
        },
        机器人,
    )
)
# =====================================================================================
fake_strategy_info = {
    策略分类.选股: {"已上线": 已上线选股装备, "已下线": 已下线选股装备},
    策略分类.择时: {"已上线": 已上线择时装备, "已下线": 已下线择时装备},
    策略分类.风控: {"已上线": 已上线风控装备, "已下线": 已下线风控装备},
    策略分类.交易: {"已上线": 已上线交易装备, "已下线": 已下线交易装备},
    策略分类.大类资产配置: {"已上线": 已上线大类资产配置装备, "已下线": 已下线大类资产配置装备},
    策略分类.基金定投: {"已上线": 已上线基金定投装备, "已下线": 已下线基金定投装备},
    策略分类.风控包: {"已上线": 已上线风控包, "已下线": 已下线风控包},
    策略分类.机器人: {"已上线": 已上线机器人, "已下线": 已下线机器人},
}
